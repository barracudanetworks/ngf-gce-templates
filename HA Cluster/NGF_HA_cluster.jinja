imports:
  - path: vpc.jinja
    name: vpc.jinja
  - path: ngf-2nics.jinja
    name: ngf-2nics.jinja


resources:
  - name: vpcOne
    type: vpc.jinja
    properties:
      vpcName: {{ properties[ 'vpcOneName' ]}}
      ipRange: {{ properties[ 'vpcOneIpRange' ]}}
      region: {{ properties[ 'region' ]}}
  - name: vpcTwo
    type: vpc.jinja
    properties:
      vpcName: {{ properties[ 'vpcTwoName' ]}}
      ipRange: {{ properties[ 'vpcTwoIpRange' ]}}
      region: {{ properties[ 'region' ]}}
  - name: ngfPrimary
    type: ngf-2nics.jinja
    properties:
      instanceName: {{ properties[ 'instanceName' ]}}
      instanceSize: {{ properties[ 'instanceSize']}}
      zone: {{ properties[ 'zoneOne' ]}}
      vpcOne: $(ref.vpcOne.vpcLink)
      subnetOne: $(ref.vpcOne.subnetLink)
      vpcTwo: $(ref.vpcTwo.vpcLink)
      subnetTwo: $(ref.vpcTwo.subnetLink)
      serviceAccount: {{ properties[ 'serviceAccount' ]}}
      imageName: {{ properties[ 'imageName' ]}}
      password: {{ properties[ 'password' ]}}
  - name: ngfSecondary
    type: ngf-2nics.jinja
    properties:
      instanceName: {{ properties[ 'instanceName' ]}}-ha
      instanceSize: {{ properties[ 'instanceSize']}}
      zone: {{ properties[ 'zoneTwo' ]}}
      vpcOne: $(ref.vpcOne.vpcLink)
      subnetOne: $(ref.vpcOne.subnetLink)
      vpcTwo: $(ref.vpcTwo.vpcLink)
      subnetTwo: $(ref.vpcTwo.subnetLink)
      serviceAccount: {{ properties[ 'serviceAccount' ]}}
      imageName: {{ properties[ 'imageName' ]}}
      password: {{ properties[ 'password' ] }}
  - name: {{ env[ 'deployment' ]}}-route1-ngfw-out
    type: compute.v1.route
    properties:
      destRange: 0.0.0.0/0
      network: $(ref.vpcOne.vpcLink)
      priority: 10
      nextHopGateway: projects/{{ env[ 'project' ]}}/global/gateways/default-internet-gateway
      tags:
        - ngfw
  - name: {{ env[ 'deployment' ]}}-route1-via-ngfw
    type: compute.v1.route
    properties:
      destRange: 0.0.0.0/0
      network: $(ref.vpcOne.vpcLink)
      priority: 100
      nextHopInstance: $(ref.ngfPrimary.boxLink)
  - name: {{ env[ 'deployment' ]}}-route2-ngfw-out
    type: compute.v1.route
    properties:
      destRange: 0.0.0.0/0
      network: $(ref.vpcTwo.vpcLink)
      priority: 10
      nextHopGateway: projects/{{ env[ 'project' ]}}/global/gateways/default-internet-gateway
      tags:
        - ngfw
  - name: {{ env[ 'deployment' ]}}-route2-via-ngfw
    type: compute.v1.route
    properties:
      destRange: 0.0.0.0/0
      network: $(ref.vpcTwo.vpcLink)
      priority: 100
      nextHopInstance: $(ref.ngfPrimary.boxLink)
  - name: {{ env[ 'deployment' ]}}-healthprobe
    type: compute.v1.httpHealthCheck
    properties:
      checkIntervalSec: 5
      healthyThreschold: 1
      unhealthyThreshold: 2
      port: 447
      requestPath: /
  - name: {{env[ 'deployment' ]}}-ngf-pool
    type: compute.v1.targetPool
    properties:
      sessionAffinity: CLIENT_IP
      region: {{ properties[ "region" ]}}
      healthChecks:
       - $(ref.{{ env[ 'deployment' ]}}-healthprobe.selfLink)
      instances:
       - $(ref.ngfPrimary.boxLink)
       - $(ref.ngfSecondary.boxLink)
  - name: {{env[ 'deployment' ]}}-public-ip
    type: compute.v1.address
    properties:
      addressType: EXTERNAL
      region: {{ properties[ "region" ]}}
  - name: {{env[ 'deployment' ]}}-frontgate-tcp
    type: compute.v1.forwardingRule
    properties:
      region: {{ properties[ "region" ]}}
      IPAddress: $(ref.{{env[ 'deployment' ]}}-public-ip.selfLink)
      IPProtocol: TCP
      loadBalancingScheme: EXTERNAL
      target: $(ref.{{env[ 'deployment' ]}}-ngf-pool.selfLink)
  - name: {{env[ 'deployment' ]}}-frontgate-udp
    type: compute.v1.forwardingRule
    properties:
      region: {{ properties[ "region" ]}}
      IPAddress: $(ref.{{env[ 'deployment' ]}}-public-ip.selfLink)
      IPProtocol: UDP
      loadBalancingScheme: EXTERNAL
      target: $(ref.{{env[ 'deployment' ]}}-ngf-pool.selfLink)
outputs:
  - name: serviceIp
    value: $(ref.{{env[ 'deployment' ]}}-public-ip.address)
  - name: ngfPrimaryIp
    value: $(ref.ngfPrimary.mgmtIp)
  - name: ngfSecondaryIp
    value: $(ref.ngfSecondary.mgmtIp)
